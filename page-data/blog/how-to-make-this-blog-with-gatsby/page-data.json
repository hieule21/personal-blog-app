{"componentChunkName":"component---src-templates-blog-template-js","path":"/blog/how-to-make-this-blog-with-gatsby/","result":{"data":{"mdx":{"id":"7e7106fe-3992-5918-89cd-a91da908105c","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to make blog with Gatsby\",\n  \"description\": \"This tutorial makes use of React and static site generator Gatsby to build fast blogging website\",\n  \"path\": \"/how-to-make-blog-with-gatsby\",\n  \"date\": \"2020-06-18T00:00:00.000Z\",\n  \"tag\": \"Gatsby\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Hello, world! Gatsby offers really cool features, when it comes to build blazing fast static sites. In other words, Gatsby is a static site generator,\\npowered by ReactJS, GraphQL, Webpack, ES6 Javascript and CSS.It make it easier to build and maintain our sites, if we follow Gatsby project structure.\"), mdx(\"p\", null, \"In this blog, we'll go through Gatsby's fundamental concepts, as well as the roles of technologies that are mentioned in this project.\"), mdx(\"h2\", null, \"What I use\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"NodeJS and NPM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HTML, CSS and Javascript(ES6)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ReactJS\")), mdx(\"h2\", null, \"What is a static site ?\"), mdx(\"p\", null, \"It is the fixed webpage displaying the same content if requested. For that reason, there is no querying database related and no dynamically\\ndisplay data from the database. Static sites are suitable for creating blogs, marketing posts, portfolio, etc.\"), mdx(\"h2\", null, \"How does Gatsby work ?\"), mdx(\"p\", null, \"Gatsby recieves data from any data sources such as Markdown files or data from database (without dynamic updates). Gatsby then uses GraphQL\\nto query the data and render out with the help of ReactJS, HTML, and CSS.\"), mdx(\"h2\", null, \"Preparation\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Install the Gatsby CLI\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install -g gatsby-cli\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create a new Gatsby project\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"gatsby new gatsby-blog\\n\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Run the app\"), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"gatsby develop\\n\")))), mdx(\"p\", null, \"Now, let's open the browser and go to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://localhost:8000\"\n  }), \"http://localhost:8000/\"), \" and everything seems ready for\\nus to create a blog!\"), mdx(\"p\", null, \"Looking at the folder we've got, it is a usual react-app folder, except for a few additional files from gatsby in the root directory:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gatsby-browser.js - Implement Gatsby's Browser APIs in this file\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gatsby-config.js - Add plugins in this file\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gatsby-node.js - Implement Gatsby's Node APIs in this file.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gatsby-ssr.js - Implement Gatsby's SSR (Server Side Rendering) APIs in this file.\")), mdx(\"p\", null, \"These are four important files that defines how our app works and Gatsby will look for during its build time. We'll be\\nusing mostly \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"gatsby-config.js\")), \" and \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"gatsby-node.js\")), \".\"), mdx(\"h2\", null, \"Modify the app\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"h4\", {\n    parentName: \"li\"\n  }, \"Create a first blog post:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create a new folder and name it \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"blogs\")), \" in the root directory. This is where we create and store our blog posts.\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create a file named \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"my-first-post.md\")), \". The file has two main parts:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Frontmatter: Add a frontmatter in the beginning of the file as information for this file.\\nFor example, the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"path\"), \" field is used to create an url leading to that blog post page.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Content: Add blog post's content right after the frontmatter with Markdown syntax.\")))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-markdown\"\n  }), \"---\\ntitle: First blog\\ndescription: This is my first blog\\npath: /first-blog\\ndate: 2020-06-18\\n---\\n\\nThe blog content goes here\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Create a few more same-structure files, then we'll later render them out programmatically.\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"h4\", {\n    parentName: \"li\"\n  }, \"Apply neccessary plugins:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It's time to get our hands dirty with \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"gatsby-plugin.js\")), \". This is where we add plugins that extends Gatsby's abilities to\\nget its job done.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"As you may notice, there are a few plugins pre-added to our project, but let's just ignore them for now.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"gatsby-plugin.js\")), \" and add this code under the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"plugin\"), \" array:\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"{\\n   resolve: `gatsby-source-filesystem`,\\n   options: {\\n      name: `blogs`,\\n      path: `${__dirname}/blogs`,\\n   }\\n}\\n\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The plugin \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"gatsby-source-filesystem\"), \" is already installed by Gatsby CLI and helps Gatsby know where to find\\nthe folder \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"blogs\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To query all the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Markdown\"), \" files in GraphQL (more on this in the next section), we also need plugin \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"gatsby-transformer-remark\"), \":\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"npm install gatsby-transformer-remark\\n\")), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Include the plugin we just installed in \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"gatsby-plugin.js\")), \" under the \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"plugin\"), \" array as one of its elements:\")), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \";`gatsby-transformer-remark`\\n\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"*\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"Note\")), \": Remember to restart development server (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"gatsby develop\"), \") after changing \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"gatsby-plugin.js\")), \" file.\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"h4\", {\n    parentName: \"li\"\n  }, \"Query static data by GraphQL in React components:\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Open the browser and navigate to \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://localhost:8000/___graphql\"\n  }), \"http://localhost:8000/\", \"_\", \"_\", \"_\", \"graphql\"), \", you'll see GraphiQL, which\\nis the GraphQL integrated development that helps us work with GraphQL easily.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There are three subwindows:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Left subwindow - Explorer: This GUI allows us to query data by clicking on the fields we need.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Middle subwindow: Displaying what we chose on Explorer window in code format which is used to query data in React\\ncomponents.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Right subwindow: Queried data is shown here in Javascript object format.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In Explorer tab, two fields \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"allFile\"), \" and \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"file\"), \", added by plugin \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"gatsby-source-filesystem\"), \", allows us to get all\\nthe files which we added their directory to \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"gatsby-plugin.js\")), \" (included the blogs folder).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"To query Markdown files, we should use plugin \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"gatsby-transformer-remark\"), \", which adds two new fields \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"allMarkdownRemark\")), \" and \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"em\", {\n    parentName: \"strong\"\n  }, \"markdownRemark\")), \"\\nto Explorer tab.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"How to make blog with Gatsby"}},"site":{"siteMetadata":{"author":"Hieu Le"}}},"pageContext":{"id":"7e7106fe-3992-5918-89cd-a91da908105c","previous":{"id":"9a1709be-5f20-5a56-b4e8-ab4b1f2b67c4","fields":{"slug":"/blog/make-an-application-scalable-with-redux-toolkit/"},"frontmatter":{"title":"Make an application scalable with Redux Toolkit"}},"next":null}}}